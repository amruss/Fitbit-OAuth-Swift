// Generated by Apple Swift version 2.1 (swiftlang-700.1.101.6 clang-700.1.76)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import ObjectiveC;
@import Foundation.NSURLSession;
@import UIKit;
@import SafariServices;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSData (SWIFT_EXTENSION(OAuthSwift))
@end


@interface NSMutableData (SWIFT_EXTENSION(OAuthSwift))
@end


@interface NSMutableData (SWIFT_EXTENSION(OAuthSwift))
@end


@interface NSURL (SWIFT_EXTENSION(OAuthSwift))
@end

@protocol OAuthSwiftURLHandlerType;

SWIFT_CLASS("_TtC10OAuthSwift10OAuthSwift")
@interface OAuthSwift : NSObject
@property (nonatomic, strong) id <OAuthSwiftURLHandlerType> __nonnull authorize_url_handler;
+ (void)handleOpenURL:(NSURL * __nonnull)url;
@end

@class OAuthSwiftCredential;
@class NSURLResponse;
@class NSError;

SWIFT_CLASS("_TtC10OAuthSwift11OAuth1Swift")
@interface OAuth1Swift : OAuthSwift
@property (nonatomic) BOOL allowMissingOauthVerifier;
- (nonnull instancetype)initWithConsumerKey:(NSString * __nonnull)consumerKey consumerSecret:(NSString * __nonnull)consumerSecret requestTokenUrl:(NSString * __nonnull)requestTokenUrl authorizeUrl:(NSString * __nonnull)authorizeUrl accessTokenUrl:(NSString * __nonnull)accessTokenUrl OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithParameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters;
- (void)authorizeWithCallbackURL:(NSURL * __nonnull)callbackURL success:(void (^ __nonnull)(OAuthSwiftCredential * __nonnull, NSURLResponse * __nullable, NSDictionary<NSString *, NSString *> * __nonnull))success failure:(void (^ __nullable)(NSError * __nonnull))failure;
+ (void)handleOpenURL:(NSURL * __nonnull)url;
@end


SWIFT_CLASS("_TtC10OAuthSwift11OAuth2Swift")
@interface OAuth2Swift : OAuthSwift
@property (nonatomic) BOOL accessTokenBasicAuthentification;
- (nonnull instancetype)initWithConsumerKey:(NSString * __nonnull)consumerKey consumerSecret:(NSString * __nonnull)consumerSecret authorizeUrl:(NSString * __nonnull)authorizeUrl accessTokenUrl:(NSString * __nonnull)accessTokenUrl responseType:(NSString * __nonnull)responseType;
- (nonnull instancetype)initWithConsumerKey:(NSString * __nonnull)consumerKey consumerSecret:(NSString * __nonnull)consumerSecret authorizeUrl:(NSString * __nonnull)authorizeUrl accessTokenUrl:(NSString * __nonnull)accessTokenUrl responseType:(NSString * __nonnull)responseType contentType:(NSString * __nonnull)contentType;
- (nonnull instancetype)initWithConsumerKey:(NSString * __nonnull)consumerKey consumerSecret:(NSString * __nonnull)consumerSecret authorizeUrl:(NSString * __nonnull)authorizeUrl responseType:(NSString * __nonnull)responseType OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithParameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters;
- (void)authorizeWithCallbackURL:(NSURL * __nonnull)callbackURL scope:(NSString * __nonnull)scope state:(NSString * __nonnull)state params:(NSDictionary<NSString *, NSString *> * __nonnull)params success:(void (^ __nonnull)(OAuthSwiftCredential * __nonnull, NSURLResponse * __nullable, NSDictionary<NSString *, NSString *> * __nonnull))success failure:(void (^ __nonnull)(NSError * __nonnull))failure;
+ (void)handleOpenURL:(NSURL * __nonnull)url;
@end


@class NSCoder;

SWIFT_CLASS("_TtC10OAuthSwift20OAuthSwiftCredential")
@interface OAuthSwiftCredential : NSObject <NSCoding>
@property (nonatomic, copy) NSString * __nonnull oauth_token;
@property (nonatomic, copy) NSString * __nonnull oauth_token_secret;
- (nonnull instancetype)initWithConsumer_key:(NSString * __nonnull)consumer_key consumer_secret:(NSString * __nonnull)consumer_secret OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOauth_token:(NSString * __nonnull)oauth_token oauth_token_secret:(NSString * __nonnull)oauth_token_secret OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)decoder;
- (void)encodeWithCoder:(NSCoder * __nonnull)coder;
+ (NSString * __nonnull)generateNonce;
- (NSDictionary<NSString *, id> * __nonnull)authorizationParameters:(NSData * __nullable)body timestamp:(NSString * __nonnull)timestamp nonce:(NSString * __nonnull)nonce;
@end

@class NSMutableURLRequest;

SWIFT_CLASS("_TtC10OAuthSwift21OAuthSwiftHTTPRequest")
@interface OAuthSwiftHTTPRequest : NSObject <NSURLSessionDelegate>
+ (void (^ __nonnull)(void (^ __nonnull)(void)))executionContext;
+ (void)setExecutionContext:(void (^ __nonnull)(void (^ __nonnull)(void)))value;
- (NSMutableURLRequest * __nullable)makeRequestAndReturnError:(NSError * __nullable * __null_unspecified)error;
+ (NSMutableURLRequest * __nullable)setupRequestForOAuth:(NSMutableURLRequest * __nonnull)request headers:(NSDictionary<NSString *, NSString *> * __nonnull)headers parameters:(NSDictionary<NSString *, id> * __nonnull)parameters dataEncoding:(NSUInteger)dataEncoding body:(NSData * __nullable)body error:(NSError * __nullable * __null_unspecified)error;
@end


SWIFT_PROTOCOL("_TtP10OAuthSwift24OAuthSwiftURLHandlerType_")
@protocol OAuthSwiftURLHandlerType
- (void)handle:(NSURL * __nonnull)url;
@end

@class NSBundle;

SWIFT_CLASS("_TtC10OAuthSwift22OAuthWebViewController")
@interface OAuthWebViewController : UIViewController <OAuthSwiftURLHandlerType>
- (void)handle:(NSURL * __nonnull)url;
- (void)doHandle:(NSURL * __nonnull)url;
- (void)dismissWebViewController;
- (nonnull instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class SFSafariViewController;
@class UIActivity;

SWIFT_CLASS("_TtC10OAuthSwift16SafariURLHandler")
@interface SafariURLHandler : NSObject <SFSafariViewControllerDelegate, OAuthSwiftURLHandlerType>
@property (nonatomic, readonly, strong) UIViewController * __nonnull viewController;
@property (nonatomic) BOOL animated;
@property (nonatomic, copy) SFSafariViewController * __nonnull (^ __nonnull factory)(NSURL * __nonnull);
@property (nonatomic, strong) id <SFSafariViewControllerDelegate> __nullable delegate;
@property (nonatomic, copy) void (^ __nullable presentCompletion)(void);
@property (nonatomic, copy) void (^ __nullable dismissCompletion)(void);
- (nonnull instancetype)initWithViewController:(UIViewController * __nonnull)viewController OBJC_DESIGNATED_INITIALIZER;
- (void)handle:(NSURL * __nonnull)url;
- (NSArray<UIActivity *> * __nonnull)safariViewController:(SFSafariViewController * __nonnull)controller activityItemsForURL:(NSURL * __nonnull)URL title:(NSString * __nullable)title;
- (void)safariViewControllerDidFinish:(SFSafariViewController * __nonnull)controller;
- (void)safariViewController:(SFSafariViewController * __nonnull)controller didCompleteInitialLoad:(BOOL)didLoadSuccessfully;
@end


@interface UIApplication (SWIFT_EXTENSION(OAuthSwift))
@end


@interface UIViewController (SWIFT_EXTENSION(OAuthSwift))
@end

#pragma clang diagnostic pop
